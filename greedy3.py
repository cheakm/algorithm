#문자열 뒤집기
# 모든 문자열의 숫자(0과 1로만 구성됨)를 같은 수로 바꾸는 경우, 즉 0과 1로만 부까눈 데 더 적은 횟수를 계산하는 것

#문제 해답 보기 전 내 아이디어.
#문자열 입력받은 다음.
# 1과 0의 각각 몇개인지 확인.
# 더 적은 수의 카드를 뒤집는 갯수 세기

#접근 포인트 1. 전부 0으로 바꾸거나 전부 1로 바꾸는 횟수를 각 구한다음 작은 횟수를 출력

data = input()
count0 = 0 #전부 0으로 바꾸는 경우 : 1이면 바꾸는 카운트 횟수 1 추가됨
count1 = 0 #전부 1로 바꾸는 경우

#첫 번째 원소에 대해 처리
if data[0] == '1':
    count0 += 1
else:
    count1 += 1
    
#두 번째 원소부터 모든 원소를 확인
for i in range(len(data)-1):
    if data[i] != data[i+1]: # 첫번째 원소와 그 뒤에 원소가 같지 않다면
        # 다음 수에서 1로 바뀌는 경우
        if data[i+1] == '1':
            count0 += 1
        #다음 수에서 0으로 바뀌는 경우
        else:
            count1+= 1
print(min(count0, count1))